2023-01-16 12:41:22.940 +02:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-01-16 12:41:23.151 +02:00 [INF] Executed DbCommand (135ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-01-16 12:41:23.546 +02:00 [INF] User profile is available. Using 'C:\Users\freez\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-16 12:41:25.055 +02:00 [INF] Now listening on: https://localhost:7112
2023-01-16 12:41:25.055 +02:00 [INF] Now listening on: http://localhost:5088
2023-01-16 12:41:27.639 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/ - -
2023-01-16 12:41:27.820 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/ - - - 301 0 - 186.0353ms
2023-01-16 12:41:27.841 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/index.html - -
2023-01-16 12:41:28.256 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/index.html - - - 200 - text/html;charset=utf-8 415.0190ms
2023-01-16 12:41:28.296 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger-ui-bundle.js - -
2023-01-16 12:41:28.296 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger-ui.css - -
2023-01-16 12:41:28.296 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger-ui-standalone-preset.js - -
2023-01-16 12:41:28.296 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_vs/browserLink - -
2023-01-16 12:41:28.296 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - -
2023-01-16 12:41:28.303 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 7.1165ms
2023-01-16 12:41:28.384 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-01-16 12:41:28.391 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger-ui-standalone-preset.js - - - 200 339486 application/javascript 95.5708ms
2023-01-16 12:41:28.392 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-01-16 12:41:28.395 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger-ui.css - - - 200 143943 text/css 99.1756ms
2023-01-16 12:41:28.431 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-01-16 12:41:28.447 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger-ui-bundle.js - - - 200 1096145 application/javascript 135.6419ms
2023-01-16 12:41:28.449 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 153.0423ms
2023-01-16 12:41:28.729 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - -
2023-01-16 12:41:28.910 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 180.7038ms
2023-01-16 12:42:03.221 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:42:03.228 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:42:03.254 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:42:03.256 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 37.3595ms
2023-01-16 12:42:03.257 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:42:03.258 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 29.8448ms
2023-01-16 12:42:03.260 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:42:03.261 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:42:03.356 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:42:03.364 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:42:03.365 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 104.6526ms
2023-01-16 12:42:03.372 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:42:03.372 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:42:03.373 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:42:03.373 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:42:03.374 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 1.9087ms
2023-01-16 12:43:12.686 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:12.686 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:12.686 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:12.686 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:12.686 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.1976ms
2023-01-16 12:43:12.686 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.9252ms
2023-01-16 12:43:12.694 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:12.694 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:13.271 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:13.290 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:13.458 +02:00 [INF] Notes Request: GetCardListQuery "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","$type":"GetCardListQuery"}
2023-01-16 12:43:14.053 +02:00 [INF] Executed DbCommand (67ms) [Parameters=[@__request_UserId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
WHERE [c].[UserId] = @__request_UserId_0
2023-01-16 12:43:14.094 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:14.121 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:14.122 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:14.122 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:14.122 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:14.123 +02:00 [INF] Notes Request: GetCardListQuery "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","$type":"GetCardListQuery"}
2023-01-16 12:43:14.126 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 826.7663ms
2023-01-16 12:43:14.127 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:14.139 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 1444.5155ms
2023-01-16 12:43:14.176 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__request_UserId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
WHERE [c].[UserId] = @__request_UserId_0
2023-01-16 12:43:14.177 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:14.177 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 54.584ms
2023-01-16 12:43:14.177 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:14.177 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 57.9125ms
2023-01-16 12:43:16.464 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:16.464 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:16.465 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:16.465 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:16.467 +02:00 [INF] Notes Request: GetCardListQuery "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","$type":"GetCardListQuery"}
2023-01-16 12:43:16.472 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__request_UserId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
WHERE [c].[UserId] = @__request_UserId_0
2023-01-16 12:43:16.473 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:16.473 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 8.6879ms
2023-01-16 12:43:16.474 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:16.474 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 10.1076ms
2023-01-16 12:43:16.475 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:16.475 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:16.476 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:16.476 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:16.476 +02:00 [INF] Notes Request: GetCardListQuery "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","$type":"GetCardListQuery"}
2023-01-16 12:43:16.482 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@__request_UserId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
WHERE [c].[UserId] = @__request_UserId_0
2023-01-16 12:43:16.482 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:16.482 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 5.9158ms
2023-01-16 12:43:16.482 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:16.482 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 7.0368ms
2023-01-16 12:43:19.880 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:19.880 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:19.880 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.3169ms
2023-01-16 12:43:19.881 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7112/api/Cards application/json 21
2023-01-16 12:43:19.882 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:19.882 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.Create (Cards.WebApi)'
2023-01-16 12:43:19.895 +02:00 [INF] Route matched with {action = "Create", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(Cards.WebApi.Models.CreateCardDto) on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:19.976 +02:00 [INF] Notes Request: CreateCardCommand "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","Title":"not admin","Details":null,"$type":"CreateCardCommand"}
2023-01-16 12:43:20.179 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (Size = 250), @p5='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [CreationDate], [Details], [EditDate], [Title], [UserId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2023-01-16 12:43:20.206 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Guid'.
2023-01-16 12:43:20.207 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.Create (Cards.WebApi) in 311.4133ms
2023-01-16 12:43:20.207 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.Create (Cards.WebApi)'
2023-01-16 12:43:20.207 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7112/api/Cards application/json 21 - 200 - application/json;+charset=utf-8 325.8519ms
2023-01-16 12:43:20.405 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:20.405 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:20.406 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:20.406 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:20.407 +02:00 [INF] Notes Request: GetCardListQuery "917a2ffb-3b71-40d8-98c8-b340b60980b4" {"UserId":"917a2ffb-3b71-40d8-98c8-b340b60980b4","$type":"GetCardListQuery"}
2023-01-16 12:43:20.420 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[@__request_UserId_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
WHERE [c].[UserId] = @__request_UserId_0
2023-01-16 12:43:20.439 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:20.441 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 34.88ms
2023-01-16 12:43:20.441 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:20.442 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 37.6657ms
2023-01-16 12:43:24.381 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - -
2023-01-16 12:43:24.381 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:24.381 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - - - 204 - - 0.4967ms
2023-01-16 12:43:24.395 +02:00 [INF] Request starting HTTP/2 DELETE https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - -
2023-01-16 12:43:24.396 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:24.397 +02:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2023-01-16 12:43:24.400 +02:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-01-16 12:43:24.400 +02:00 [INF] Request finished HTTP/2 DELETE https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - - - 403 0 - 4.9516ms
2023-01-16 12:43:37.099 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.099 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.099 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.099 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.099 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.2708ms
2023-01-16 12:43:37.099 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.4057ms
2023-01-16 12:43:37.105 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.105 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.107 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-01-16 12:43:37.146 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
2023-01-16 12:43:37.147 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:43:37.149 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:43:37.149 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 44.8196ms
2023-01-16 12:43:37.153 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.153 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.153 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-01-16 12:43:37.154 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
2023-01-16 12:43:37.154 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:43:37.154 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:43:37.154 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 1.3045ms
2023-01-16 12:43:37.439 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.440 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.440 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-01-16 12:43:37.441 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
2023-01-16 12:43:37.441 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:43:37.441 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:43:37.441 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 1.5454ms
2023-01-16 12:43:37.443 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:37.444 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:37.445 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidAudienceException: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateAudience(IEnumerable`1 audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-01-16 12:43:37.446 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10206: Unable to validate audience. The 'audiences' parameter is empty.
2023-01-16 12:43:37.446 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:43:37.446 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:43:37.446 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 3.4575ms
2023-01-16 12:43:44.254 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:44.255 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:44.255 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:44.255 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 1.0492ms
2023-01-16 12:43:44.257 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:44.257 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 1.8297ms
2023-01-16 12:43:44.267 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:44.267 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:44.267 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:44.267 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:44.267 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:43:44.279 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:43:44.280 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:44.280 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 12.4925ms
2023-01-16 12:43:44.280 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:44.280 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 13.6725ms
2023-01-16 12:43:44.285 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:43:44.285 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:44.285 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:44.285 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:44.285 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:43:44.291 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:43:44.292 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:43:44.292 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 7.0104ms
2023-01-16 12:43:44.292 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:43:44.293 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 8.0819ms
2023-01-16 12:43:51.942 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:43:51.942 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:51.942 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 0.6808ms
2023-01-16 12:43:51.945 +02:00 [INF] Request starting HTTP/2 PUT https://localhost:7112/api/Cards application/json 65
2023-01-16 12:43:51.945 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:51.946 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.Update (Cards.WebApi)'
2023-01-16 12:43:51.952 +02:00 [INF] Route matched with {action = "Update", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Update(Cards.WebApi.Models.UpdateCardDto) on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:51.997 +02:00 [INF] Notes Request: UpdateCardCommand "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":"bef1e56d-b0f7-49de-92ab-990b6b84c386","Id":"bbf94052-cf46-40fa-8765-b68de088b295","Title":"not admin","Details":null,"$type":"UpdateCardCommand"}
2023-01-16 12:43:52.031 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__request_Id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreationDate], [c].[Details], [c].[EditDate], [c].[Title], [c].[UserId]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__request_Id_0
2023-01-16 12:43:52.187 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.Update (Cards.WebApi) in 235.0156ms
2023-01-16 12:43:52.188 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.Update (Cards.WebApi)'
2023-01-16 12:43:52.281 +02:00 [INF] Request finished HTTP/2 PUT https://localhost:7112/api/Cards application/json 65 - 404 - application/json 335.9459ms
2023-01-16 12:43:58.040 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - -
2023-01-16 12:43:58.040 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:58.040 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - - - 204 - - 0.2282ms
2023-01-16 12:43:58.041 +02:00 [INF] Request starting HTTP/2 DELETE https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - -
2023-01-16 12:43:58.041 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:43:58.041 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.Delete (Cards.WebApi)'
2023-01-16 12:43:58.044 +02:00 [INF] Route matched with {action = "Delete", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Delete(System.Guid) on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:43:58.049 +02:00 [INF] Notes Request: DeleteCardCommand "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"Id":"bbf94052-cf46-40fa-8765-b68de088b295","UserId":"bef1e56d-b0f7-49de-92ab-990b6b84c386","$type":"DeleteCardCommand"}
2023-01-16 12:43:58.105 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreationDate], [c].[Details], [c].[EditDate], [c].[Title], [c].[UserId]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__get_Item_0
2023-01-16 12:43:58.200 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.Delete (Cards.WebApi) in 155.8883ms
2023-01-16 12:43:58.201 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.Delete (Cards.WebApi)'
2023-01-16 12:43:58.290 +02:00 [INF] Request finished HTTP/2 DELETE https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - - - 404 - application/json 248.7191ms
2023-01-16 12:44:02.380 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - -
2023-01-16 12:44:02.381 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:44:02.381 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:44:02.381 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards/bbf94052-cf46-40fa-8765-b68de088b295 - - - 401 0 - 1.0860ms
2023-01-16 12:46:50.492 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-01-16 12:46:50.587 +02:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-01-16 12:46:50.710 +02:00 [INF] User profile is available. Using 'C:\Users\freez\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-16 12:46:50.861 +02:00 [INF] Now listening on: https://localhost:7112
2023-01-16 12:46:50.861 +02:00 [INF] Now listening on: http://localhost:5088
2023-01-16 12:46:51.426 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/index.html - -
2023-01-16 12:46:51.704 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/index.html - - - 200 - text/html;charset=utf-8 282.2199ms
2023-01-16 12:46:51.730 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - -
2023-01-16 12:46:51.736 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_vs/browserLink - -
2023-01-16 12:46:51.738 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 8.9868ms
2023-01-16 12:46:51.797 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 60.8337ms
2023-01-16 12:46:51.951 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - -
2023-01-16 12:46:52.126 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 175.3474ms
2023-01-16 12:46:56.841 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:46:56.841 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:46:56.880 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:56.880 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:56.882 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 41.7493ms
2023-01-16 12:46:56.882 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 41.7962ms
2023-01-16 12:46:56.884 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:46:56.885 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:56.958 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:46:56.965 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:46:56.965 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 81.2645ms
2023-01-16 12:46:56.967 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:46:56.967 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:56.969 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:46:56.969 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:46:56.969 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 2.1958ms
2023-01-16 12:46:58.270 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:46:58.270 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:58.687 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:46:58.707 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:46:58.869 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:46:59.331 +02:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:46:59.380 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:46:59.388 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:46:59.389 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:46:59.389 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:46:59.390 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:46:59.390 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:46:59.393 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 682.1158ms
2023-01-16 12:46:59.395 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:46:59.406 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 1136.0273ms
2023-01-16 12:46:59.466 +02:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:46:59.466 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:46:59.467 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 76.9891ms
2023-01-16 12:46:59.467 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:46:59.467 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 78.5278ms
2023-01-16 12:47:02.840 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - -
2023-01-16 12:47:02.840 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:47:02.840 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - - - 204 - - 0.2568ms
2023-01-16 12:47:02.841 +02:00 [INF] Request starting HTTP/2 DELETE https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - -
2023-01-16 12:47:02.841 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:47:02.842 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.Delete (Cards.WebApi)'
2023-01-16 12:47:02.854 +02:00 [INF] Route matched with {action = "Delete", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Delete(System.Guid) on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:47:02.904 +02:00 [INF] Notes Request: DeleteCardCommand "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"Id":"cd74f245-f341-416d-88ef-0b991f8fc864","UserId":null,"$type":"DeleteCardCommand"}
2023-01-16 12:47:06.685 +02:00 [INF] Executed DbCommand (36ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreationDate], [c].[Details], [c].[EditDate], [c].[Title], [c].[UserId]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__get_Item_0
2023-01-16 12:49:33.065 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-01-16 12:49:33.156 +02:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-01-16 12:49:33.268 +02:00 [INF] User profile is available. Using 'C:\Users\freez\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-16 12:49:33.412 +02:00 [INF] Now listening on: https://localhost:7112
2023-01-16 12:49:33.412 +02:00 [INF] Now listening on: http://localhost:5088
2023-01-16 12:49:33.963 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/index.html - -
2023-01-16 12:49:34.219 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/index.html - - - 200 - text/html;charset=utf-8 260.0425ms
2023-01-16 12:49:34.289 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - -
2023-01-16 12:49:34.293 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/_vs/browserLink - -
2023-01-16 12:49:34.293 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_framework/aspnetcore-browser-refresh.js - - - 200 11994 application/javascript;+charset=utf-8 3.8654ms
2023-01-16 12:49:34.351 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 58.3469ms
2023-01-16 12:49:34.405 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - -
2023-01-16 12:49:34.571 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 166.5224ms
2023-01-16 12:49:37.386 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:49:37.386 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards - -
2023-01-16 12:49:37.412 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:37.412 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:37.414 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 27.8156ms
2023-01-16 12:49:37.414 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards - - - 204 - - 27.7844ms
2023-01-16 12:49:37.415 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:37.416 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:37.483 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:49:37.489 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:49:37.490 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 74.3452ms
2023-01-16 12:49:37.493 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:37.493 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:37.494 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-01-16 12:49:37.495 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-01-16 12:49:37.495 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 401 0 - 1.9905ms
2023-01-16 12:49:38.731 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:38.731 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:39.113 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:39.131 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:49:39.296 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:49:39.788 +02:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:49:39.835 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:49:39.842 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:39.842 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:39.842 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:39.843 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:49:39.843 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:49:39.846 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 711.0409ms
2023-01-16 12:49:39.847 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:39.863 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 1131.9779ms
2023-01-16 12:49:39.904 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:49:39.905 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:49:39.905 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 62.3553ms
2023-01-16 12:49:39.905 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:39.905 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 63.3749ms
2023-01-16 12:49:41.814 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:41.814 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:41.814 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:41.815 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:49:41.816 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:49:41.820 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:49:41.820 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:49:41.820 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 5.4577ms
2023-01-16 12:49:41.820 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:41.820 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 6.2587ms
2023-01-16 12:49:41.821 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7112/api/Cards - -
2023-01-16 12:49:41.822 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:41.822 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:41.822 +02:00 [INF] Route matched with {action = "GetAll", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[Cards.Application.Cards.Queries.GetCardList.CardListVm]] GetAll() on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:49:41.822 +02:00 [INF] Notes Request: GetCardListQuery "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"UserId":null,"$type":"GetCardListQuery"}
2023-01-16 12:49:41.825 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Title]
FROM [Cards] AS [c]
2023-01-16 12:49:41.825 +02:00 [INF] Executing OkObjectResult, writing value of type 'Cards.Application.Cards.Queries.GetCardList.CardListVm'.
2023-01-16 12:49:41.825 +02:00 [INF] Executed action Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi) in 3.2753ms
2023-01-16 12:49:41.825 +02:00 [INF] Executed endpoint 'Cards.WebApi.Controllers.CardsController.GetAll (Cards.WebApi)'
2023-01-16 12:49:41.826 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7112/api/Cards - - - 200 - application/json;+charset=utf-8 4.2173ms
2023-01-16 12:49:47.775 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - -
2023-01-16 12:49:47.776 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:47.776 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - - - 204 - - 0.5360ms
2023-01-16 12:49:47.777 +02:00 [INF] Request starting HTTP/2 DELETE https://localhost:7112/api/Cards/cd74f245-f341-416d-88ef-0b991f8fc864 - -
2023-01-16 12:49:47.777 +02:00 [INF] CORS policy execution successful.
2023-01-16 12:49:47.778 +02:00 [INF] Executing endpoint 'Cards.WebApi.Controllers.CardsController.Delete (Cards.WebApi)'
2023-01-16 12:49:47.790 +02:00 [INF] Route matched with {action = "Delete", controller = "Cards"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Delete(System.Guid) on controller Cards.WebApi.Controllers.CardsController (Cards.WebApi).
2023-01-16 12:49:47.846 +02:00 [INF] Notes Request: DeleteCardCommand "bef1e56d-b0f7-49de-92ab-990b6b84c386" {"Id":"cd74f245-f341-416d-88ef-0b991f8fc864","UserId":null,"$type":"DeleteCardCommand"}
2023-01-16 12:49:50.123 +02:00 [INF] Executed DbCommand (36ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CreationDate], [c].[Details], [c].[EditDate], [c].[Title], [c].[UserId]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__get_Item_0
